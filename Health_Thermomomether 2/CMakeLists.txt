cmake_minimum_required(VERSION 3.16)

project(BLE_HTS VERSION 0.1 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(Qt6 6.4 REQUIRED COMPONENTS Quick Bluetooth Charts Widgets Core5Compat)

qt_standard_project_setup()

# The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
# generated by CMake. This variable contains the .icns file name,
# without the path.
set(MACOSX_BUNDLE_ICON_FILE appicon.png)
# And the following tells CMake where to find and install the file itself.
set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/icons/appicon.png")
set_source_files_properties(${app_icon_macos} PROPERTIES
 MACOSX_PACKAGE_LOCATION "Resources")

qt_add_executable(appHTS
    main.cpp ${app_icon_macos}
)

qt_add_qml_module(appHTS
    URI BLE_HTS
    VERSION 1.0
    QML_FILES Main.qml
    SOURCES bledevice.cpp bledevice.h deviceinfo.cpp deviceinfo.h
    QML_FILES Wheel.qml Gauge.qml CustomChart.qml
    RESOURCES icons/batt.png icons/Armpit.png icons/Body.png icons/Ear.png icons/Finger.png icons/GastroInt.png icons/Mouth.png icons/NoTempType.png icons/Rectum.png icons/Toe.png
)

# Qt for iOS sets MACOSX_BUNDLE_GUI_IDENTIFIER automatically since Qt 6.1.
# If you are developing for iOS or macOS you should consider setting an
# explicit, fixed bundle identifier manually though.
set_target_properties(appHTS PROPERTIES
    #    MACOSX_BUNDLE_GUI_IDENTIFIER com.example.appBLE_LIGHT
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

target_link_libraries(appHTS
    PRIVATE Qt6::Quick
    Qt::Bluetooth
    Qt6::Charts
    Qt6::Widgets
    Qt6::Core5Compat
)

include(GNUInstallDirs)
install(TARGETS appHTS
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

if (APPLE)
    if (IOS)
        set_target_properties(appHTS PROPERTIES
            MACOSX_BUNDLE_INFO_PLIST "${CMAKE_CURRENT_SOURCE_DIR}/Info.cmake.ios.plist"
        )
else()
    set_target_properties(appHTS PROPERTIES
        MACOSX_BUNDLE_INFO_PLIST "${CMAKE_CURRENT_SOURCE_DIR}/Info.cmake.macos.plist"
    )
endif()
endif()
